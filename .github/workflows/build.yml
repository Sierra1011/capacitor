name: 🏗️ Build
on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    

jobs:
  test:
    name: 🤞 Test
    runs-on: ubuntu-latest
    steps:
    - name: 🛑 Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22.1

    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - name: ⬇️ Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 5
 
    - name: 🤞 Test UI
      run: make test-ui
 
    - name: Go Build Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    - name: Go Mod Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: 🤞 Test
      run: |
        git config --global user.email "git@gimlet.io"
        git config --global user.name "Github Actions"
        make test

    - name: 🏗️ Build
      run: make build
      env:
        VERSION: "ci-build"

    - uses: actions/upload-artifact@v4
      with:
        name: capacitor
        path: build
        retention-days: 15

  publish:
    name: Publish version
    needs: test
    strategy:
      matrix: 
        arch: 
          - amd64
      fail-fast: false
    concurrency: 
      group: ${{ github.ref }}-${{ matrix.arch }}
      cancel-in-progress: true
    permissions:
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 5

      - uses: actions/download-artifact@v4
        with:
          path: build
          name: capacitor

      - name: Get Repo Owner
        id: get_repo_owner
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Get short sha
        id: shortsha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Release build
        id: release_build
        uses: docker/build-push-action@v4
        with:
          outputs: "type=registry,push=true"
          platforms: linux/${{ matrix.arch }}
          file: ./docker/Dockerfile
          context: .
          provenance: false
          build-args: |
            TARGETPLATFORM=${{ matrix.arch }}
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:${{ steps.shortsha.outputs.short_sha }}-${{ matrix.arch }}
            ghcr.io/${{ env.REPO_OWNER }}/${{ github.event.repository.name }}:latest-${{ matrix.arch }}
            